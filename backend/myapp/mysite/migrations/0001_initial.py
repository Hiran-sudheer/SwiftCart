# Generated by Django 4.2.5 on 2024-01-24 09:32

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignedCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AssignedCategory', models.CharField(max_length=250)),
                ('shop_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('shopType', models.CharField(max_length=50)),
                ('sortOrder', models.IntegerField(default=0)),
                ('status', models.CharField(default='Active', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Categoryname',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Currencyname',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProductManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Productname', models.CharField(max_length=255, null=True)),
                ('Local', models.CharField(blank=True, max_length=255, null=True, verbose_name='(Local)')),
                ('ERPcode', models.CharField(blank=True, max_length=255, null=True)),
                ('RegularPrice', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('OfferPrice', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Availability', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('slot_1', models.BooleanField(blank=True, default=False, null=True)),
                ('slot_2', models.BooleanField(blank=True, default=False, null=True)),
                ('slot_3', models.BooleanField(blank=True, default=False, null=True)),
                ('slot_4', models.BooleanField(blank=True, default=False, null=True)),
                ('every_time', models.BooleanField(blank=True, default=False, null=True)),
                ('Description', models.TextField(blank=True, max_length=300, null=True)),
                ('Sortorder', models.IntegerField(blank=True, default=0, null=True)),
                ('Image', models.ImageField(blank=True, null=True, upload_to='product_image/')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('warranty', models.CharField(help_text='eg:1 Year', max_length=50)),
                ('Category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.category')),
            ],
        ),
        migrations.CreateModel(
            name='ShopType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('Local', models.CharField(max_length=200)),
                ('Description', models.CharField(max_length=500)),
                ('Status', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shoptypename',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Themename',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Varient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='YourModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Specifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='mysite.productmanagement')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Shopname', models.CharField(max_length=255, null=True)),
                ('Shopnamelocal', models.CharField(blank=True, max_length=255, null=True)),
                ('ShopCode', models.CharField(max_length=255, null=True)),
                ('ShopAddress', models.CharField(max_length=255, null=True)),
                ('ExpiredDate', models.DateField(blank=True, null=True)),
                ('Currency', models.CharField(blank=True, max_length=50, null=True)),
                ('Seoimages', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('SeoDescription', models.TextField(max_length=300)),
                ('PixelCode', models.TextField(max_length=500)),
                ('CityNames', models.TextField(max_length=255)),
                ('Theme', models.CharField(blank=True, max_length=50, null=True)),
                ('Banner1', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Banner2', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Banner3', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('Contactnumber', models.PositiveIntegerField(blank=True, null=True, verbose_name='Contact Number (Username)')),
                ('ShopLogo', models.ImageField(blank=True, null=True, upload_to='shop_logos', verbose_name='Shop Logo (494x86)')),
                ('TotalItems', models.PositiveIntegerField(null=True, verbose_name='Total Items (With Country Code)')),
                ('shop_type', models.CharField(max_length=50)),
                ('WhatsappNumber', models.PositiveIntegerField(null=True)),
                ('ShopURL', models.CharField(max_length=255)),
                ('SeoTitle', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ManyToManyField(to='mysite.category')),
            ],
        ),
        migrations.AddField(
            model_name='productmanagement',
            name='Shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.shop'),
        ),
        migrations.CreateModel(
            name='Assignvariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Assignvariant', models.CharField(max_length=250)),
                ('Categoryid', models.IntegerField()),
                ('Shoptypes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mysite.shoptype')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
